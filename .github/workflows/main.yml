name: 'Lint and Docker Image'

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

jobs:
  lint_python:
    name: Lint Python Files
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8

    - name: Print working directory
      run: pwd

    - name: Run Linter
      run: |
        pwd
        # This command finds all Python files recursively and runs flake8 on them
        find . -name "*.py" -exec flake8 {} +
        echo "Linted all the python files successfully"

  lint_js:
      name: Lint JavaScript Files
      runs-on: ubuntu-latest

      steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Install JSHint
        run: npm install jshint --global

      - name: Run Linter
        run: |
          # This command finds all JavaScript files recursively and runs JSHint on them
          find ./server/database -name "*.js" -exec jshint {} +
          echo "Linted all the js files successfully"

  build:
    name: Docker Image CI
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: docker login
      env:
        DOCKER_USER: ${{secrets.DOCKER_USERNAME}}
        DOCKER_TOKEN: ${{secrets.DOCKER_TOKEN}}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_TOKEN

    - name: Build the Docker image for nodeapp
      run: docker build . -f server/database/Dockerfile -t nodeapp
      
    - name: Install docker-compose
      run: |
        sudo apt install docker-compose
      
    - name: Deploy microservices
      run: docker-compose -f server/docker-compose.yml up -d

    - name: Building front-end
      env:
        CI: false
        GIT_USERNAME: ${{vars.GIT_USERNAME}}
        GIT_EMAIL: ${{vars.GIT_EMAIL}}
      run: |
        git remote add origin https://github.com/GYaamini/Car_Dealership_fullstack_developer_capstone.git
        git config --global user.email GIT_EMAIL
        git config --global user.name GIT_USERNAME
        cd server/frontend
        npm install        
        npm run build
        npm install --save gh-pages
        yarn add gh-pages
        npm run deploy

    - name: Build the Docker image
      run: docker build . --file ./server/Dockerfile --tag gowriyaamini/cardealership-fullstack-capstone:${{ github.sha }}

    - name: Docker push
      run: docker push gowriyaamini/cardealership-fullstack-capstone:${{ github.sha }}
